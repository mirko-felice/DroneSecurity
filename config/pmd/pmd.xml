<?xml version="1.0"?>
<ruleset name="Drone Security Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>Drone Security rules for Java</description>

    <rule ref="category/java/bestpractices.xml" >
        <exclude name="JUnitTestContainsTooManyAsserts"/> <!-- Want to assert more than once in a single test method. -->
    </rule>

    <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
        <properties>
            <property name="ignoredAnnotations" value="java.lang.Deprecated | javafx.fxml.FXML"/> <!-- Ignore FXML controller private methods. -->
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml" >
        <exclude name="CallSuperInConstructor"/> <!-- Don't want to add boilerplate code. Java does it for us. -->
        <exclude name="AtLeastOneConstructor"/> <!-- Don't want to add boilerplate code. Java does it for us. -->
        <exclude name="LongVariable"/> <!-- Prefer not be limited by this rule so variable names are more esplicite. -->
        <exclude name="ControlStatementBraces"/> <!-- Prefer not add braces where unnecessary. -->
        <exclude name="OnlyOneReturn"/> <!-- No sense rule. -->
        <exclude name="ShortVariable"/> <!-- Prefer not be limited by this rule so variable names are more esplicite. -->
        <exclude name="ShortClassName"/> <!-- Prefer not be limited by this rule so class names are more esplicite. -->
        <exclude name="GenericsNaming"/> <!-- Prefer to clarify generics naming explicitly. -->
    </rule>

    <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier">
        <properties>
            <property name="ignoredAnnotations" value="org.junit.jupiter.api.Test|org.junit.jupiter.params.ParameterizedTest" /> <!-- Ignore JUnit test methods. -->
        </properties>
    </rule>

    <rule ref="category/java/codestyle.xml/ClassNamingConventions" >
        <properties>
            <property name="utilityClassPattern" value="([A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants|Factory|Processor|Analyzer))|DomainEvents|OpenHostService" />
            <!-- Added custom utility pattern names. -->
        </properties>
    </rule>
    
    <rule ref="category/java/design.xml" >
        <exclude name="LoosePackageCoupling"/> <!-- Ignoring package coupling because of our architecture. -->
        <exclude name="LawOfDemeter"/> <!-- Too many constraints. -->
        <exclude name="DataClass" /> <!-- Needed to exclude for 'AbstractOrder' and 'NegligenceReport' in drone-system -->
        <exclude name="UseObjectForClearerAPI"/>
    </rule>

    <rule ref="category/java/design.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="11" /> <!-- Needed for Issues UI Controller -->
        </properties>
    </rule>

    <rule ref="category/java/design.xml/TooManyFields">
        <properties>
            <property name="maxfields" value="29" /> <!-- Needed for Issues UI Controller -->
        </properties>
    </rule>

    <rule ref="category/java/documentation.xml/CommentRequired">
        <properties>
            <property name="fieldCommentRequirement" value="Ignored"/> <!-- Don't want to comment even private fields, unnecessary. -->
        </properties>
    </rule>

    <rule ref="category/java/errorprone.xml" >
        <exclude name="DoNotTerminateVM"/> <!-- System.exit needed. -->
        <exclude name="BeanMembersShouldSerialize"/> <!-- Don't want to set transient to all fields, unnecessary. -->
    </rule>

    <rule ref="category/java/multithreading.xml" >
        <exclude name="DoNotUseThreads" /> <!-- Want to use threads. -->
    </rule>

    <rule ref="category/java/performance.xml" />

    <rule ref="category/java/security.xml" />

</ruleset>